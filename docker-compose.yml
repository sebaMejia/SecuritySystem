services:
  # PostgreSQL Database
  postgres:
    image: postgres:17
    container_name: security_platform_db
    environment:
      POSTGRES_DB: security_platform
      POSTGRES_USER: security_user
      POSTGRES_PASSWORD: security_pass
      POSTGRES_HOST_AUTH_METHOD: md5
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - security_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U security_user -d security_platform"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: security_platform_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - security_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # Flask API
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: security_platform_api
    environment:
      FLASK_CONFIG: development
      DATABASE_URL: postgresql://security_user:MrTLexify21@security-platform-db.ch8imaoc0xz7.us-east-2.rds.amazonaws.com:5432/security_platform
      REDIS_URL: redis://redis:6379/0
    ports:
      - "5000:5000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - security_network
    volumes:
      - .:/app
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  security_network:
    driver: bridge